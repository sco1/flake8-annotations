name: lint-and-test

on:
  pull_request:
  push:
    branches:
      - main
    tags-ignore:
      - "**"  # Skip re-linting when tags are added

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Poetry for caching
      run: pipx install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'poetry'

    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools importlib-metadata
        poetry install

    - name: Run flake8
      run: poetry run flake8

    - name: Run mypy
      run: poetry run mypy .
      if: always()

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13-dev"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    - name: Install Poetry for caching
      run: pipx install poetry

    - name: Set up (release) Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      if: "!endsWith(matrix.python-version, '-dev')"
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'

    - name: Set up (deadsnakes) Python ${{ matrix.python-version }}
      uses: deadsnakes/action@v3.0.0
      if: endsWith(matrix.python-version, '-dev')
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools importlib-metadata
        pip install tox-gh-actions

    - name: Run tests w/tox
      run: tox

    - name: Cache coverage for ${{ matrix.python-version }}
      uses: actions/upload-artifact@v3
      with:
        name: cov_py${{ matrix.python-version }}
        path: .coverage

  combine-cov:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Pull coverage workflow artifacts
      uses: actions/download-artifact@v3
      with:
        path: cov_cache/

    - name: Install cov & combine
      run: |
        pip install coverage
        coverage combine ./cov_cache/**/.coverage

    - name: Report coverage
      run: |
        echo '**Combined Coverage**' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        coverage report -m --skip-covered >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        coverage html

    - name: Publish cov HTML
      uses: actions/upload-artifact@v3
      with:
        path: htmlcov/
        name: cov_report_html
